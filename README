The idea:
Use Three.js[1] and parse_pto.py[2] to render panorama projects from hugin[3] in 3D from the original source images.

How?  A backend service parses the image filenames and panorama data from a hugin project file (.pto) and sends 
it to the browser via AJAX (well, AJAJ). The browser uses the information to render a view of the panorama 
(currently using flat planes) using WebGL.

The front-end is all HTML5/CSS3/JS (including jQuery and three.js), and has been tested on Chrome 16.

TODO: Lots, this is just barely a working prototype at the moment

Installation:
The backend that serves json snippets parsed from pto files requires Python and web.py.

pip install -r requirements.txt
Create 2 directories in the project root "pto" and "img" and place the respective files in there
bin/start_server.sh
Go to http://localhost:8080/static/index.html

[1] https://github.com/mrdoob/three.js
[2] http://bazaar.launchpad.net/~kfj/+junk/script/view/head:/main/parse_pto.py
[3] http://wiki.panotools.org/Hugin
